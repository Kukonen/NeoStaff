version: "3.9"

services:
  api:
    build: 
      context: ./Domain
      dockerfile: Dockerfile
    ports:
      - 8080:80
    depends_on:
      - mongodb
      - kafka
    environment:
      - KAFKA_BOOTSTRAPADDRESS=kafka:9092
      - KAFKA_ANALYTICS_TOPIC=analytics-topic

  analytics:
    build: 
      context: ./Analytics
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAPADDRESS=kafka:9092
      - KAFKA_ANALYTICS_TOPIC=analytics-topic
      - KAFKA_GROUPID=7655

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
     - 22181:2181
     - 2888:2888
     - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.0.1
  #   ports:
  #    - 8081:8081
  #    - 8181:8181
  #   environment:
  #    - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
  #    - SCHEMA_REGISTRY_HOST_NAME=schema-registry
  #    - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
  #   links:
  #    - zookeeper

  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017